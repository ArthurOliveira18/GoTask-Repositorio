-- Criação do schema
CREATE SCHEMA IF NOT EXISTS `gotask` DEFAULT CHARACTER SET utf8;
USE `gotask`;

-- Tabela Pai
CREATE TABLE IF NOT EXISTS `Pai` (
  `idPai` INT NOT NULL AUTO_INCREMENT,
  `Email` VARCHAR(50) NOT NULL UNIQUE,
  `Senha` VARCHAR(25) NOT NULL UNIQUE,
  `Nome_Pai` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idPai`)
);

-- Tabela Crianca
CREATE TABLE IF NOT EXISTS `Crianca` (
  `idCrianca` INT NOT NULL AUTO_INCREMENT,
  `Nome_crianca` VARCHAR(45) NOT NULL,
  `Dt_nasc` DATE,
  `pontos` INT NOT NULL,
  `Pai_idPai` INT NOT NULL,
  PRIMARY KEY (`idCrianca`),
  INDEX `fk_Crianca_Pai` (`Pai_idPai`),
  CONSTRAINT `fk_Crianca_Pai`
    FOREIGN KEY (`Pai_idPai`)
    REFERENCES `Pai` (`idPai`)
);

-- Tabela Task
CREATE TABLE IF NOT EXISTS `Task` (
  `idTask` INT NOT NULL AUTO_INCREMENT,
  `Nome_task` VARCHAR(45) NOT NULL,
  `Pontos_task` INT NOT NULL,
  `status` INT NOT NULL,
  PRIMARY KEY (`idTask`)
);

-- Tabela Beneficio
CREATE TABLE IF NOT EXISTS `Beneficio` (
  `idBeneficio` INT NOT NULL AUTO_INCREMENT,
  `Nome_ben` VARCHAR(100) NOT NULL,
  `pontos_ben` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`idBeneficio`)
);

-- Tabela Historico_Task
CREATE TABLE IF NOT EXISTS `Historico_Task` (
  `Crianca_idCrianca` INT NOT NULL,
  `Task_idTask` INT NOT NULL,
  `dia` SET("seg", "ter", "qua", "qui", "sex", "fds") NOT NULL,
  `feita` TINYINT NOT NULL,
  `data` DATETIME NOT NULL,
  PRIMARY KEY (`Crianca_idCrianca`, `Task_idTask`),
  CONSTRAINT `fk_Historico_Task_Crianca`
    FOREIGN KEY (`Crianca_idCrianca`)
    REFERENCES `Crianca` (`idCrianca`),
  CONSTRAINT `fk_Historico_Task_Task`
    FOREIGN KEY (`Task_idTask`)
    REFERENCES `Task` (`idTask`)
);

-- Tabela Historico_Beneficio
CREATE TABLE IF NOT EXISTS `Historico_Beneficio` (
  `Crianca_idCrianca` INT NOT NULL,
  `Beneficio_idBeneficio` INT NOT NULL,
  `data` DATETIME NOT NULL,
  `valor` INT NOT NULL,
  PRIMARY KEY (`Crianca_idCrianca`, `Beneficio_idBeneficio`),
  CONSTRAINT `fk_Historico_Beneficio_Crianca`
    FOREIGN KEY (`Crianca_idCrianca`)
    REFERENCES `Crianca` (`idCrianca`),
  CONSTRAINT `fk_Historico_Beneficio_Beneficio`
    FOREIGN KEY (`Beneficio_idBeneficio`)
    REFERENCES `Beneficio` (`idBeneficio`)
);



