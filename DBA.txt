-- Criação do schema
CREATE SCHEMA IF NOT EXISTS `gotask` DEFAULT CHARACTER SET utf8;
USE `gotask`;

-- Tabela Pai
CREATE TABLE IF NOT EXISTS `responsavel` (
  `idResp` INT NOT NULL AUTO_INCREMENT,
  `Email` VARCHAR(50) NOT NULL UNIQUE,
  `Senha` VARCHAR(25) NOT NULL UNIQUE,
  `Nome_Resp` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idResp`)
);

-- Tabela Crianca
CREATE TABLE IF NOT EXISTS `crianca` (
  `idCrianca` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  `nomeCrianca` VARCHAR(45) NOT NULL,
  `dtNasc` DATE,
  `pontos` INT NOT NULL,
  `responsavel` INT NOT NULL,
  CONSTRAINT `fk_Crianca_Responsavel`
    FOREIGN KEY (`responsavel`)
    REFERENCES `responsavel` (`idResp`)
);

-- Tabela Task
CREATE TABLE IF NOT EXISTS `task` (
  `idTask` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  `Nome_task` VARCHAR(45) NOT NULL,
  `Pontos_task` INT NOT NULL,
  `status` INT NOT NULL,
  `RespT` int not null,
  constraint `Resp_task`
  foreign key(`RespT`)
  references `responsavel`(`idResp`)
);

-- Tabela Beneficio
CREATE TABLE IF NOT EXISTS `beneficio` (
  `idBeneficio` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  `Nome_ben` VARCHAR(100) NOT NULL,
  `pontos_ben` INT NOT NULL DEFAULT 0,
  `RespB` int not null,
  constraint `Resp_Bene`
  foreign key(`RespB`)
  references `responsavel`(`idResp`)
);


-- Tabela Historico_Task
CREATE TABLE IF NOT EXISTS `historicoTask` (
  `idHistoricoTask` int not null primary key AUTO_INCREMENT,
  `CriancaT` INT NOT NULL,
  `Task` INT NOT NULL,
  `dia` SET("seg", "ter", "qua", "qui", "sex", "fds") NOT NULL,
  `feita` TINYINT NOT NULL,
  `dataTask` DATETIME NOT NULL,
  CONSTRAINT `crianca_historico_T`
    FOREIGN KEY (`CriancaT`)
    REFERENCES `crianca` (`idCrianca`),
  CONSTRAINT `task_historico`
    FOREIGN KEY (`Task`)
    REFERENCES `task` (`idTask`)
);

-- Tabela Historico_Beneficio
CREATE TABLE IF NOT EXISTS `historicoBeneficio` (
  `idHistoricoBeneficio` int not null primary key AUTO_INCREMENT,
  `CriancaB` INT NOT NULL,
  `Beneficio` INT NOT NULL,
  `dataBeneficio` DATETIME NOT NULL,
  `valor` INT NOT NULL,
  CONSTRAINT `crianca_historico_B`
    FOREIGN KEY (`CriancaB`)
    REFERENCES `crianca` (`idCrianca`),
  CONSTRAINT `beneficio_historico`
    FOREIGN KEY (`Beneficio`)
    REFERENCES `beneficio` (`idBeneficio`)
);

-- view para facilcilitar a vida 



-- crianca e pai
create view carregandoFilho as 
select * from crianca c
join responsavel r
on c.responsavel = r.idResp;

-- view crianca e agregados
create view godsTable as
select * from crianca c
join historicoTask ht
on c.idCrianca = ht.CriancaT
join historicoBeneficio hb
on c.idCrianca = hb.CriancaB
join task t
on t.idTask = ht.Task
join beneficio b
on b.idBeneficio = hb.Beneficio;



select * from carregandoFilho;

